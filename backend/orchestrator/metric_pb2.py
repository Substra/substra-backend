# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: metric.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from . import common_pb2 as common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cmetric.proto\x12\x0corchestrator\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x0c\x63ommon.proto\"\xd8\x02\n\x06Metric\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12.\n\x0b\x64\x65scription\x18\x03 \x01(\x0b\x32\x19.orchestrator.Addressable\x12*\n\x07\x61\x64\x64ress\x18\x05 \x01(\x0b\x32\x19.orchestrator.Addressable\x12.\n\x0bpermissions\x18\x06 \x01(\x0b\x32\x19.orchestrator.Permissions\x12\r\n\x05owner\x18\x07 \x01(\t\x12\x31\n\rcreation_date\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x34\n\x08metadata\x18\x12 \x03(\x0b\x32\".orchestrator.Metric.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xa3\x02\n\tNewMetric\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12.\n\x0b\x64\x65scription\x18\x03 \x01(\x0b\x32\x19.orchestrator.Addressable\x12*\n\x07\x61\x64\x64ress\x18\x05 \x01(\x0b\x32\x19.orchestrator.Addressable\x12\x35\n\x0fnew_permissions\x18\x06 \x01(\x0b\x32\x1c.orchestrator.NewPermissions\x12\x37\n\x08metadata\x18\x12 \x03(\x0b\x32%.orchestrator.NewMetric.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1d\n\x0eGetMetricParam\x12\x0b\n\x03key\x18\x01 \x01(\t\"V\n\x14QueryMetricsResponse\x12%\n\x07metrics\x18\x01 \x03(\x0b\x32\x14.orchestrator.Metric\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\":\n\x11QueryMetricsParam\x12\x12\n\npage_token\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\r2\xe6\x01\n\rMetricService\x12?\n\x0eRegisterMetric\x12\x17.orchestrator.NewMetric\x1a\x14.orchestrator.Metric\x12?\n\tGetMetric\x12\x1c.orchestrator.GetMetricParam\x1a\x14.orchestrator.Metric\x12S\n\x0cQueryMetrics\x12\x1f.orchestrator.QueryMetricsParam\x1a\".orchestrator.QueryMetricsResponseB)Z\'github.com/owkin/orchestrator/lib/assetb\x06proto3')



_METRIC = DESCRIPTOR.message_types_by_name['Metric']
_METRIC_METADATAENTRY = _METRIC.nested_types_by_name['MetadataEntry']
_NEWMETRIC = DESCRIPTOR.message_types_by_name['NewMetric']
_NEWMETRIC_METADATAENTRY = _NEWMETRIC.nested_types_by_name['MetadataEntry']
_GETMETRICPARAM = DESCRIPTOR.message_types_by_name['GetMetricParam']
_QUERYMETRICSRESPONSE = DESCRIPTOR.message_types_by_name['QueryMetricsResponse']
_QUERYMETRICSPARAM = DESCRIPTOR.message_types_by_name['QueryMetricsParam']
Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), {

  'MetadataEntry' : _reflection.GeneratedProtocolMessageType('MetadataEntry', (_message.Message,), {
    'DESCRIPTOR' : _METRIC_METADATAENTRY,
    '__module__' : 'metric_pb2'
    # @@protoc_insertion_point(class_scope:orchestrator.Metric.MetadataEntry)
    })
  ,
  'DESCRIPTOR' : _METRIC,
  '__module__' : 'metric_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.Metric)
  })
_sym_db.RegisterMessage(Metric)
_sym_db.RegisterMessage(Metric.MetadataEntry)

NewMetric = _reflection.GeneratedProtocolMessageType('NewMetric', (_message.Message,), {

  'MetadataEntry' : _reflection.GeneratedProtocolMessageType('MetadataEntry', (_message.Message,), {
    'DESCRIPTOR' : _NEWMETRIC_METADATAENTRY,
    '__module__' : 'metric_pb2'
    # @@protoc_insertion_point(class_scope:orchestrator.NewMetric.MetadataEntry)
    })
  ,
  'DESCRIPTOR' : _NEWMETRIC,
  '__module__' : 'metric_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.NewMetric)
  })
_sym_db.RegisterMessage(NewMetric)
_sym_db.RegisterMessage(NewMetric.MetadataEntry)

GetMetricParam = _reflection.GeneratedProtocolMessageType('GetMetricParam', (_message.Message,), {
  'DESCRIPTOR' : _GETMETRICPARAM,
  '__module__' : 'metric_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.GetMetricParam)
  })
_sym_db.RegisterMessage(GetMetricParam)

QueryMetricsResponse = _reflection.GeneratedProtocolMessageType('QueryMetricsResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMETRICSRESPONSE,
  '__module__' : 'metric_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.QueryMetricsResponse)
  })
_sym_db.RegisterMessage(QueryMetricsResponse)

QueryMetricsParam = _reflection.GeneratedProtocolMessageType('QueryMetricsParam', (_message.Message,), {
  'DESCRIPTOR' : _QUERYMETRICSPARAM,
  '__module__' : 'metric_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.QueryMetricsParam)
  })
_sym_db.RegisterMessage(QueryMetricsParam)

_METRICSERVICE = DESCRIPTOR.services_by_name['MetricService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\'github.com/owkin/orchestrator/lib/asset'
  _METRIC_METADATAENTRY._options = None
  _METRIC_METADATAENTRY._serialized_options = b'8\001'
  _NEWMETRIC_METADATAENTRY._options = None
  _NEWMETRIC_METADATAENTRY._serialized_options = b'8\001'
  _METRIC._serialized_start=78
  _METRIC._serialized_end=422
  _METRIC_METADATAENTRY._serialized_start=375
  _METRIC_METADATAENTRY._serialized_end=422
  _NEWMETRIC._serialized_start=425
  _NEWMETRIC._serialized_end=716
  _NEWMETRIC_METADATAENTRY._serialized_start=375
  _NEWMETRIC_METADATAENTRY._serialized_end=422
  _GETMETRICPARAM._serialized_start=718
  _GETMETRICPARAM._serialized_end=747
  _QUERYMETRICSRESPONSE._serialized_start=749
  _QUERYMETRICSRESPONSE._serialized_end=835
  _QUERYMETRICSPARAM._serialized_start=837
  _QUERYMETRICSPARAM._serialized_end=895
  _METRICSERVICE._serialized_start=898
  _METRICSERVICE._serialized_end=1128
# @@protoc_insertion_point(module_scope)
