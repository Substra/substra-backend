"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import datamanager_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Dataset(google.protobuf.message.Message):
    """Dataset references several related samples"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_MANAGER_FIELD_NUMBER: builtins.int
    DATA_SAMPLE_KEYS_FIELD_NUMBER: builtins.int
    @property
    def data_manager(self) -> datamanager_pb2.DataManager: ...
    @property
    def data_sample_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        data_manager: datamanager_pb2.DataManager | None = ...,
        data_sample_keys: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_manager", b"data_manager"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_manager", b"data_manager", "data_sample_keys", b"data_sample_keys"]) -> None: ...

global___Dataset = Dataset

class GetDatasetParam(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    key: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["key", b"key"]) -> None: ...

global___GetDatasetParam = GetDatasetParam
