# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: performance.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11performance.proto\x12\x0corchestrator\x1a\x1fgoogle/protobuf/timestamp.proto\"Y\n\x0eNewPerformance\x12\x18\n\x10\x63ompute_task_key\x18\x01 \x01(\t\x12\x12\n\nmetric_key\x18\x05 \x01(\t\x12\x19\n\x11performance_value\x18\x02 \x01(\x02\"\x89\x01\n\x0bPerformance\x12\x18\n\x10\x63ompute_task_key\x18\x01 \x01(\t\x12\x12\n\nmetric_key\x18\x05 \x01(\t\x12\x19\n\x11performance_value\x18\x02 \x01(\x02\x12\x31\n\rcreation_date\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"F\n\x16PerformanceQueryFilter\x12\x18\n\x10\x63ompute_task_key\x18\x01 \x01(\t\x12\x12\n\nmetric_key\x18\x02 \x01(\t\"u\n\x16QueryPerformancesParam\x12\x12\n\npage_token\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\r\x12\x34\n\x06\x66ilter\x18\x03 \x01(\x0b\x32$.orchestrator.PerformanceQueryFilter\"e\n\x19QueryPerformancesResponse\x12/\n\x0cPerformances\x18\x01 \x03(\x0b\x32\x19.orchestrator.Performance\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t2\xc8\x01\n\x12PerformanceService\x12N\n\x13RegisterPerformance\x12\x1c.orchestrator.NewPerformance\x1a\x19.orchestrator.Performance\x12\x62\n\x11QueryPerformances\x12$.orchestrator.QueryPerformancesParam\x1a\'.orchestrator.QueryPerformancesResponseB)Z\'github.com/owkin/orchestrator/lib/assetb\x06proto3')



_NEWPERFORMANCE = DESCRIPTOR.message_types_by_name['NewPerformance']
_PERFORMANCE = DESCRIPTOR.message_types_by_name['Performance']
_PERFORMANCEQUERYFILTER = DESCRIPTOR.message_types_by_name['PerformanceQueryFilter']
_QUERYPERFORMANCESPARAM = DESCRIPTOR.message_types_by_name['QueryPerformancesParam']
_QUERYPERFORMANCESRESPONSE = DESCRIPTOR.message_types_by_name['QueryPerformancesResponse']
NewPerformance = _reflection.GeneratedProtocolMessageType('NewPerformance', (_message.Message,), {
  'DESCRIPTOR' : _NEWPERFORMANCE,
  '__module__' : 'performance_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.NewPerformance)
  })
_sym_db.RegisterMessage(NewPerformance)

Performance = _reflection.GeneratedProtocolMessageType('Performance', (_message.Message,), {
  'DESCRIPTOR' : _PERFORMANCE,
  '__module__' : 'performance_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.Performance)
  })
_sym_db.RegisterMessage(Performance)

PerformanceQueryFilter = _reflection.GeneratedProtocolMessageType('PerformanceQueryFilter', (_message.Message,), {
  'DESCRIPTOR' : _PERFORMANCEQUERYFILTER,
  '__module__' : 'performance_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.PerformanceQueryFilter)
  })
_sym_db.RegisterMessage(PerformanceQueryFilter)

QueryPerformancesParam = _reflection.GeneratedProtocolMessageType('QueryPerformancesParam', (_message.Message,), {
  'DESCRIPTOR' : _QUERYPERFORMANCESPARAM,
  '__module__' : 'performance_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.QueryPerformancesParam)
  })
_sym_db.RegisterMessage(QueryPerformancesParam)

QueryPerformancesResponse = _reflection.GeneratedProtocolMessageType('QueryPerformancesResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYPERFORMANCESRESPONSE,
  '__module__' : 'performance_pb2'
  # @@protoc_insertion_point(class_scope:orchestrator.QueryPerformancesResponse)
  })
_sym_db.RegisterMessage(QueryPerformancesResponse)

_PERFORMANCESERVICE = DESCRIPTOR.services_by_name['PerformanceService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\'github.com/owkin/orchestrator/lib/asset'
  _NEWPERFORMANCE._serialized_start=68
  _NEWPERFORMANCE._serialized_end=157
  _PERFORMANCE._serialized_start=160
  _PERFORMANCE._serialized_end=297
  _PERFORMANCEQUERYFILTER._serialized_start=299
  _PERFORMANCEQUERYFILTER._serialized_end=369
  _QUERYPERFORMANCESPARAM._serialized_start=371
  _QUERYPERFORMANCESPARAM._serialized_end=488
  _QUERYPERFORMANCESRESPONSE._serialized_start=490
  _QUERYPERFORMANCESRESPONSE._serialized_end=591
  _PERFORMANCESERVICE._serialized_start=594
  _PERFORMANCESERVICE._serialized_end=794
# @@protoc_insertion_point(module_scope)
