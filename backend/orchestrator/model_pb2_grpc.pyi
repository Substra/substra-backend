"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import model_pb2

class ModelServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    RegisterModel: grpc.UnaryUnaryMultiCallable[
        model_pb2.NewModel,
        model_pb2.Model] = ...

    GetModel: grpc.UnaryUnaryMultiCallable[
        model_pb2.GetModelParam,
        model_pb2.Model] = ...

    QueryModels: grpc.UnaryUnaryMultiCallable[
        model_pb2.QueryModelsParam,
        model_pb2.QueryModelsResponse] = ...

    GetComputeTaskOutputModels: grpc.UnaryUnaryMultiCallable[
        model_pb2.GetComputeTaskModelsParam,
        model_pb2.GetComputeTaskModelsResponse] = ...

    GetComputeTaskInputModels: grpc.UnaryUnaryMultiCallable[
        model_pb2.GetComputeTaskModelsParam,
        model_pb2.GetComputeTaskModelsResponse] = ...

    CanDisableModel: grpc.UnaryUnaryMultiCallable[
        model_pb2.CanDisableModelParam,
        model_pb2.CanDisableModelResponse] = ...

    DisableModel: grpc.UnaryUnaryMultiCallable[
        model_pb2.DisableModelParam,
        model_pb2.DisableModelResponse] = ...


class ModelServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def RegisterModel(self,
        request: model_pb2.NewModel,
        context: grpc.ServicerContext,
    ) -> model_pb2.Model: ...

    @abc.abstractmethod
    def GetModel(self,
        request: model_pb2.GetModelParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.Model: ...

    @abc.abstractmethod
    def QueryModels(self,
        request: model_pb2.QueryModelsParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.QueryModelsResponse: ...

    @abc.abstractmethod
    def GetComputeTaskOutputModels(self,
        request: model_pb2.GetComputeTaskModelsParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.GetComputeTaskModelsResponse: ...

    @abc.abstractmethod
    def GetComputeTaskInputModels(self,
        request: model_pb2.GetComputeTaskModelsParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.GetComputeTaskModelsResponse: ...

    @abc.abstractmethod
    def CanDisableModel(self,
        request: model_pb2.CanDisableModelParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.CanDisableModelResponse: ...

    @abc.abstractmethod
    def DisableModel(self,
        request: model_pb2.DisableModelParam,
        context: grpc.ServicerContext,
    ) -> model_pb2.DisableModelResponse: ...


def add_ModelServiceServicer_to_server(servicer: ModelServiceServicer, server: grpc.Server) -> None: ...
