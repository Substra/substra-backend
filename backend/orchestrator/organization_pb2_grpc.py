# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import organization_pb2 as organization__pb2


class OrganizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterOrganization = channel.unary_unary(
                '/orchestrator.OrganizationService/RegisterOrganization',
                request_serializer=organization__pb2.RegisterOrganizationParam.SerializeToString,
                response_deserializer=organization__pb2.Organization.FromString,
                )
        self.GetAllOrganizations = channel.unary_unary(
                '/orchestrator.OrganizationService/GetAllOrganizations',
                request_serializer=organization__pb2.GetAllOrganizationsParam.SerializeToString,
                response_deserializer=organization__pb2.GetAllOrganizationsResponse.FromString,
                )


class OrganizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrganizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterOrganization,
                    request_deserializer=organization__pb2.RegisterOrganizationParam.FromString,
                    response_serializer=organization__pb2.Organization.SerializeToString,
            ),
            'GetAllOrganizations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllOrganizations,
                    request_deserializer=organization__pb2.GetAllOrganizationsParam.FromString,
                    response_serializer=organization__pb2.GetAllOrganizationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'orchestrator.OrganizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrganizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orchestrator.OrganizationService/RegisterOrganization',
            organization__pb2.RegisterOrganizationParam.SerializeToString,
            organization__pb2.Organization.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/orchestrator.OrganizationService/GetAllOrganizations',
            organization__pb2.GetAllOrganizationsParam.SerializeToString,
            organization__pb2.GetAllOrganizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
