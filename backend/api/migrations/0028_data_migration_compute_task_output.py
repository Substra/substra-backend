# Generated by Django 4.0.6 on 2022-07-28 18:28
#
# Create missing compute task output rows in the DB.
#
# This data migration will only affect Substra deployments which are upgraded from a version inferior to v17.0 (to a
# version superior or equal to v17.0). For these deployments, the compute task output rows were never created in the
# DB.

from django.db import migrations


def add_missing_compute_task_outputs(apps, schema_editor):
    compute_task_model = apps.get_model("api", "computetask")
    model_model = apps.get_model("api", "model")

    for task in compute_task_model.objects.filter(outputs__isnull=True):

        # TRAIN / AGGREGATE
        if task.category in [compute_task_model.Category.TASK_TRAIN, compute_task_model.Category.TASK_AGGREGATE]:
            permission_public = True
            permission_authorized_ids = []

            models = task.models.all()
            if models:
                permission_public = models[0].permissions_process_public
                permission_authorized_ids = models[0].permissions_process_authorized_ids

            output = create_output(task, "model", permission_public, permission_authorized_ids)
            output.save()

        # COMPOSITE
        elif task.category in compute_task_model.Category.TASK_COMPOSITE:
            models = task.models.all()

            trunk_permission_public = True
            trunk_permission_authorized_ids = []
            head_permission_public = True
            head_permission_authorized_ids = []

            if models:
                head_model = [model for model in models if model.category == model_model.Category.MODEL_HEAD][0]
                head_permission_public = head_model.permissions_process_public
                head_permission_authorized_ids = head_model.permissions_process_authorized_ids

                trunk_model = [model for model in models if model.category == model_model.Category.MODEL_SIMPLE][0]
                trunk_permission_public = trunk_model.permissions_process_public
                trunk_permission_authorized_ids = trunk_model.permissions_process_authorized_ids

            output_trunk = create_output(apps, task, "shared", trunk_permission_public, trunk_permission_authorized_ids)
            output_trunk.save()

            output_head = create_output(apps, task, "local", head_permission_public, head_permission_authorized_ids)
            output_head.save()

        # PREDICT
        elif task.category in compute_task_model.Category.TASK_PREDICT:
            permission_public = True
            permission_authorized_ids = []

            models = task.models.all()
            if models:
                permission_public = models[0].permissions_process_public
                permission_authorized_ids = models[0].permissions_process_authorized_ids

            output = create_output(apps, task, "predictions", permission_public, permission_authorized_ids)
            output.save()

        # TEST
        elif task.category in compute_task_model.Category.TASK_TEST:
            # perfs are always public
            output = create_output(task, "performance", True, [])
            output.save()


def create_output(apps, task, identifier, permissions_public, permissions_authorized_ids):
    compute_task_output_model = apps.get_model("api", "computetaskoutput")

    return compute_task_output_model(
        task=task,
        identifier=identifier,
        permissions_download_public=permissions_public,
        permissions_download_authorized_ids=permissions_authorized_ids,
        permissions_process_public=permissions_public,
        permissions_process_authorized_ids=permissions_authorized_ids,
    )


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0027_remove_computetask_head_permissions_download_authorized_ids_and_more"),
    ]

    operations = [
        migrations.RunPython(add_missing_compute_task_outputs),
    ]
