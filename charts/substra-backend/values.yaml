backend:
  replicaCount: 1
  settings: prod
  tokenStrategy: 'unique'  # 'reuse'
  defaultDomain: localhost
  uwsgiProcesses: 20
  uwsgiThreads: 2
  gzipModels: false
  # commonHostDomain: 'yourdomain.tld'

  pagination:
    maxPageSize: 100

  kaniko:
    image: gcr.io/kaniko-project/executor:v1.6.0
    mirror: false  # If true, kaniko will pull base images from the local registry
    dockerConfigSecretName: ""  # Name of the secret to mount in kaniko pod to be able to fetch from private registry
    cache:
      warmer:
        image: gcr.io/kaniko-project/warmer:v1.6.0
        images: []
          # - image: gcr.io/connect-314908/connect-tools:0.8.0-minimal

  compute:
    registry: null  # Pull compute tasks images (image builder, cleanup, ...) from a custom registry
    # Increase this value if the pods take too much time to start; it can happen when compute docker
    # image size is a few gigabytes and depending on the deployment environment
    podStartupTimeoutSeconds: 300

  image:
    repository: gcr.io/connect-314908/connect-backend
    tag: orc-rc8
    pullPolicy: IfNotPresent
    pullSecrets: []

  service:
    type: NodePort
    port: 8000
    annotations: {}
    labels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    # nodePort: 30000

  ingress:
    # Enable ingress ressource for the connect API
    enabled: false

    # Path for the default host
    path: /

    # The list of extra paths to be created for the default host
    # e.g:
    # extraPaths:
    #   - path: /
    #     pathType: ImplementationSpecific
    #     backend:
    #       service:
    #         name: substra-backend-svc
    #         port:
    #           name: http
    extraPaths: []

    # Ingress path type
    pathType: ImplementationSpecific

    # Default host for the ingress
    hostname: chart-example.local

    annotations: {}

    # The list of additional hostnames to be covered with this ingress record
    # e.g:
    # extraHosts:
    #   - name: chart-example.local
    #     path: /
    #     pathType: ImplementationSpecific
    extraHosts: []

    # The tls configuration for hostnames to be coverred by the ingress
    # e.g:
    # extraTls:
    #   - hosts:
    #       - chart-example.local
    #     secretName: connect-tls
    extraTls: []

    # IngressClass that will be used to implement the Ingress
    # This is required if you have more than one default ingress class in your cluster
    ingressClassName:

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  grpc:
    keepalive:
      timeMs: 120000

  persistence:
    # storageClassName: ""
    # hostPath: "/substra"
    servermedias:
      size: 10Gi
      # hostPath: /host/servermedias
    volumes:
      algos:
        size: "10Gi"
      datamanagers:
        size: "10Gi"
      objectives:
        size: "10Gi"

outgoingNodes: []
  # - name: nodeId
  #   secret: nodeSecret
incomingNodes: []
  # - name: nodeId
  #   secret: nodeSecret

users: []
  # - name: username
  #   secret: password
  #   channel: mychannel

organization:
  name: substra

user:
  name: user

peer:
  mspID: OwkinPeerMSP

orchestrator:
  host: owkin-orchestrator-org-1.org-1.svc.cluster.local
  port: 9000
  tls:
    enabled: false
    mtls:
      enabled: false
  rabbitmq:
    host: owkin-orchestrator-org-1-rabbitmq.org-1.svc.cluster.local
    port: 5672
    auth:
      username: user
      password: password
    tls:
      enabled: false
      port: 5671

channels:
  - mychannel:
      restricted: false
      model_export_enabled: false
      chaincode:
        name: mycc
        version: "1.0"

postgresql:
  enabled: true
  postgresqlDatabase: substra
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  persistence:
    enabled: false

rabbitmq:
  enabled: true
  auth:
    username: rabbitmq
    password: rabbitmq
  persistence:
    enabled: false
  port: 5672
  # host: rabbitmq.local

docker-registry:
  enabled: true
  storage: filesystem
  persistence:
    enabled: true
    size: 10Gi
    deleteEnabled: true
  service:
    type: NodePort

celerybeat:
  replicaCount: 1
  expiredTokensFlushPeriod: 86400
  maximumImagesTTL: 604800
  taskPeriod: 10800
  image:
    repository: substrafoundation/substra-backend
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

celeryscheduler:
  resources: {}

celeryworker:
  replicaCount: 1
  concurrency: 1  # Max number of tasks to process in parallel
  updateStrategy: RollingUpdate
  image:
    repository: substrafoundation/substra-backend
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  rbac:
    # Add ServiceAccount for celeryworker
    enable: True

  persistence:
    # storageClassName: ""
    # hostPath: "/substra"
    servermedias:
      enableDatasampleStorage: False  # when using "path" to upload datasamples, the datasample will be stored in servermedia instead of MinIO. Can be put to True only if running on one kubernetes node.
    volumes:
      subtuple:
        # subtuple size should be *at least* equal to the combined size of the following PVCs:
        # datasamples, models, objectives, datamanagers, algos, compositealgos, and aggregatealgos.
        size: "10Gi"
      docker-cache:
        size: "10Gi"

events:
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

minio:
  enabled: true
  accessKey:
    password: minio
    forcePassword: true   # required for helm upgrade to work well (https://github.com/bitnami/charts/blob/master/bitnami/minio/values.yaml#L95)
  secretKey:
    password: minio1234
    forcePassword: true   # required for helm upgrade to work well (https://github.com/bitnami/charts/blob/master/bitnami/minio/values.yaml#L104)
  forceNewKeys: true      # required to take into account new access and secret keys

extraEnv:
  - name: TASK_CACHE_DOCKER_IMAGES
    value: 'True'
  # - name: ENV_VARIABLE
  #   value: false

privateCa:
  enabled: false
  image:
    repository: alpine:latest
    pullPolicy: IfNotPresent
    apkAdd: true
  configMap:
    name: substra-private-ca
#    data: nil
    fileName: private-ca.crt


httpClient:
  timeoutSeconds: 30


registry:
  local: true    # false if you use external docker-registry (host and port will be taken into account)
  host: 127.0.0.1
  port: 32000
  scheme: http
  pullDomain: 127.0.0.1

  ## Local registry pre-populate
  prepopulate: []
    # - image: substrafoundation/substra-tools:0.7.0
    #   sourceRegistry: xxx.dkr.ecr.eu-west-1.amazonaws.com
    #   dockerConfigSecretName: docker-config

## Pod Security Policy
## ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/
psp:
  create: True

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  enabled: True
  fsGroup: 1001
  runAsUser: 1001
  runAsGroup: 1001

hooks:
  serviceAccount:
    name: ""
  deleteComputePods:
    enabled: False
    image:
      repository: bitnami/kubectl
      tag: latest

