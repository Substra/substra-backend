## @section Global Substra settings
## @param settings The settings to use for substra (`prod` or `dev`)
##
settings: prod
## @param config The configuration to use for substra
##
config: {}
## @param organizationName Current organization name
##
organizationName: owkin
## @param DataSampleStorageInServerMedia If set to true, Datasamples which are registered by a "path" are kept on the "servermedias" volume. If set to `false` (default value), the datasample will be duplicated to MinIO.
##
DataSampleStorageInServerMedia: false


privateCa:
  ## @param privateCa.enabled Run the init container injecting the private CA certificate
  ##
  enabled: false
  ## @param privateCa.image.repository Private CA injector image
  ## @param privateCa.image.tag Private CA injector tag
  ## @param privateCa.image.pullPolicy Private CA injector pull policy
  ## @param privateCa.image.apkAdd Install the update-ca-certificates package
  ##
  image:
    repository: ubuntu
    tag: latest
    pullPolicy: IfNotPresent
    apkAdd: true
  ## @param privateCa.configMap.name Name of the _ConfigMap_ containing the private CA certificate
  ## @param privateCa.configMap.data Certificate to add in the _ConfigMap_
  ## @param privateCa.configMap.fileName Certificate filename in the _ConfigMap_
  configMap:
    name: substra-private-ca
    data:
    fileName: private-ca.crt

## @param psp.create Create a _Pod Security Policy_ in the cluster. WARNING: PodSecurityPolicy is deprecated in Kubernetes 1.21 or later and unavailable in Kubernetes 1.25 or later
##
psp:
  create: true

## @section Server settings
## @param server.replicaCount Number of server replicas
## @param server.defaultDomain The hostname and port of the backend. This address will be used as the assets `storage_address` field
## @param server.subpath The subpath under which the API is served
## @param server.commonHostDomain The common host under which the backend and frontend are served
## @param server.uwsgiProcesses The number of uwsgi processes
## @param server.uwsgiThreads The number of uwsgi threads
##
server:
  replicaCount: 1
  defaultDomain: localhost
  subpath: ""
  commonHostDomain: ""
  uwsgiProcesses: 20
  uwsgiThreads: 10

  ## Substra backend image version
  ## @param server.image.registry Substra backend server image registry
  ## @param server.image.repository Substra backend server image repository
  ## @param server.image.tag Substra backend server image tag
  ## @param server.image.pullPolicy Substra backend server image pull policy
  ## @param server.image.pullSecrets Specify image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: substra/substra-backend
    tag: 0.30.0
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be created manually in the namespace.
    ##
    pullSecrets: []

  ## @param server.podSecurityContext.enabled Enable security context
  ## @param server.podSecurityContext.runAsUser User ID for the pod
  ## @param server.podSecurityContext.runAsGroup Group ID for the pod
  ## @param server.podSecurityContext.fsGroup FileSystem group ID for the pod
  ##
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

  service:
    ## @param server.service.type Kubernetes Service type
    ##
    type: ClusterIP
    ## @param server.service.port Server port
    ##
    port: 8000
    ## @param server.service.clusterIP _ClusterIP_ or `None` for headless service
    ## e.g:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param server.service.loadBalancerIP Load balancer IP if service type is `LoadBalancer`
    ##
    loadBalancerIP: ""
    ## @param server.service.loadBalancerSourceRanges Addresses that are allowed when service is `LoadBalancer`
    ## e.g:
    ## - 10.1O.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param server.service.nodePort Specify the `nodePort` value for the `LoadBalancer` and `NodePort` service types
    ##
    nodePort: ""
    ## @param server.service.externalIPs A list of IP addresses for which nodes in the cluster will also accept traffic for this service
    ##
    externalIPs: []
    ## @param server.service.annotations Additional annotations for the _Service_ resource.
    ##
    annotations: {}

  ingress:
    ## @param server.ingress.enabled Deploy an ingress for the substra backend server
    ##
    enabled: false

    ## @param server.ingress.hostname Default host for the ingress ressource
    ##
    hostname: substra.backend.local

    ## @param server.ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific

    ## @param server.ingress.path Path for the default host
    ##
    path: /

    ## @param server.ingress.extraPaths The list of extra paths to be created for the default host
    ## e.g:
    ## extraPaths:
    ##   - path: /
    ##     pathType: ImplementationSpecific
    ##     backend:
    ##       service:
    ##         name: substra-backend-svc
    ##         port:
    ##           name: http
    ##
    extraPaths: []

    ## @param server.ingress.annotations Additional annotations for the Ingress resource.
    ##
    annotations: {}

    ## @param server.ingress.extraHosts The list of additional hostnames to be covered with this ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: chart-example.local
    ##     path: /
    ##     pathType: ImplementationSpecific
    ##
    extraHosts: []

    ## @param server.ingress.extraTls The tls configuration for hostnames to be coverred by the ingress
    ## e.g:
    ## extraTls:
    ##   - hosts:
    ##       - chart-example.local
    ##     secretName: substra-tls
    ##
    extraTls: []

    ## @param server.ingress.ingressClassName _IngressClass_ that will be used to implement the Ingress
    ##
    ingressClassName:

  ## @param server.resources Server container resources requests and limits
  ## e.g:
  ## resources:
  ##   limits:
  ##     cpu: 100m
  ##     memory: 128Mi
  ##   requests:
  ##     cpu: 100m
  ##     memory: 128Mi
  ##
  resources: {}

  persistence:
    ## @param server.persistence.storageClass Specify the _StorageClass_ used to provision the volume. Or the default _StorageClass_ will be used. Set it to `-` to disable dynamic provisioning
    ##
    storageClass: ""
    ## @param server.persistence.servermedias.size Servermedias volume size
    ##
    servermedias:
      size: 10Gi
  ## server containers' liveness probe
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param server.livenessProbe.enabled Enable livenessProbe
  ## @param server.livenessProbe.path Path of the HTTP service for checking the healthy state
  ## @param server.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param server.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param server.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param server.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param server.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    path: /liveness
    initialDelaySeconds: 60
    periodSeconds: 45
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## server containers' readiness probe
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ## @param server.readinessProbe.enabled Enable readinessProbe
  ## @param server.readinessProbe.path Path of the HTTP service for checking the healthy state
  ## @param server.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param server.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param server.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param server.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param server.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    path: /readiness
    initialDelaySeconds: 5
    periodSeconds: 30
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1

  metrics:
    ## @param server.metrics.enabled Start a prometheus exporter
    ##
    enabled: false
    ## Metrics exporter image version
    ## @param server.metrics.image.registry Substra backend server Prometheus Exporter image registry
    ## @param server.metrics.image.repository Substra backend server Prometheus Exporter image repository
    ## @param server.metrics.image.tag Substra backend server Prometheus Exporter image tag
    ## @param server.metrics.image.pullPolicy Substra backend server Prometheus Exporter image pull policy
    ##
    image:
      registry: ghcr.io
      repository: substra/substra-backend-metrics-exporter
      tag: 0.30.0
      pullPolicy: IfNotPresent

    serviceMonitor:
      ## @param server.metrics.serviceMonitor.enabled Create ServiceMonitor resource for scraping metrics using Prometheus Operator
      ##
      enabled: false
      ## @param server.metrics.serviceMonitor.namespace Namespace for the ServiceMonitor resource (defaults to the Release Namespace)
      ##
      namespace: ""
      ## @param server.metrics.serviceMonitor.interval Interval at which metrics should be scraped
      ##
      interval: ""
      ## @param server.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ##
      scrapeTimeout: ""
      ## @param server.metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
      ##
      relabelings: []
      ## @param server.metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before insertion
      ##
      metricRelabelings: []
      ## @param server.metrics.serviceMonitor.honorLabels Specify honorLabels parameter of the scrape endpoint
      ##
      honorLabels: false

## @section Substra worker settings
##
worker:
  ## @param worker.enabled Enable worker service
  ##
  enabled: true
  ## @param worker.replicaCount Replica count for the worker service
  ##
  replicaCount: 1
  ## @param worker.concurrency Maximum amount of tasks to process in parallel
  ##
  concurrency: 1
  ## @param worker.image.registry Substra backend worker image registry
  ## @param worker.image.repository Substra backend worker image repository
  ## @param worker.image.tag Substra backend worker image tag
  ## @param worker.image.pullPolicy Substra backend worker image pull policy
  ## @param worker.image.pullSecrets Specify image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: substra/substra-backend
    tag: 0.30.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param worker.podSecurityContext.enabled Enable security context
  ## @param worker.podSecurityContext.runAsUser User ID for the pod
  ## @param worker.podSecurityContext.runAsGroup Group ID for the pod
  ## @param worker.podSecurityContext.fsGroup FileSystem group ID for the pod
  ##
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  ## @param worker.resources Worker container resources requests and limits
  ##
  resources: {}
  ## @param worker.nodeSelector Node labels for pod assignment
  ##
  nodeSelector: {}
  ## @param worker.tolerations Toleration labels for pod assignment
  ##
  tolerations: []
  ## @param worker.affinity Affinity settings for pod assignment, ignored if `DataSampleStorageInServerMedia` is `true`
  ##
  affinity: {}
  ## @param worker.rbac.create Create a role and service account for the worker
  ##
  rbac:
    create: true
  ## @param worker.persistence.storageClass Specify the _StorageClass_ used to provision the volume. Or the default _StorageClass_ will be used. Set it to `-` to disable dynamic provisioning
  ## @param worker.persistence.size The size of the volume. The size of this volume should be sufficient to store many assets.
  ##
  persistence:
    storageClass: ""
    size: 10Gi
  computePod:
    ## @param worker.computePod.maxStartupWaitSeconds Set the maximum amount of time we will wait for the compute pod to be ready
    maxStartupWaitSeconds: 300
    ## @param worker.computePod.securityContext.fsGroup Set the filesystem group for the Compute pod
    ## @param worker.computePod.securityContext.runAsUser Set the user for the Compute pod
    ## @param worker.computePod.securityContext.runAsGroup Set the group for the Compute pod
    ##
    securityContext:
      fsGroup: 1001
      runAsUser: 1001
      runAsGroup: 1001
  events:
    ## @param worker.events.enabled Enable event service
    ##
    enabled: true
    ## @param worker.events.image.registry Substra event app image registry
    ## @param worker.events.image.repository Substra event app image repository
    ## @param worker.events.image.tag Substra event app image tag
    ## @param worker.events.image.pullPolicy Substra event app image pull policy
    ## @param worker.events.image.pullSecrets Specify image pull secrets
    ##
    image:
      registry: ghcr.io
      repository: substra/substra-backend
      tag: 0.30.0
      pullPolicy: IfNotPresent
      pullSecrets: []
    ## @param worker.events.podSecurityContext.enabled Enable security context
    ## @param worker.events.podSecurityContext.runAsUser User ID for the pod
    ## @param worker.events.podSecurityContext.runAsGroup Group ID for the pod
    ## @param worker.events.podSecurityContext.fsGroup FileSystem group ID for the pod
    ##
    podSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
    ## @param worker.events.nodeSelector Node labels for pod assignment
    ##
    nodeSelector: {}
    ## @param worker.events.tolerations Toleration labels for pod assignment
    ##
    tolerations: []
    ## @param worker.events.affinity Affinity settings for pod assignment
    ##
    affinity: {}
    ## @param worker.events.rbac.create Create a role and service account for the event app
    ##
    rbac:
      create: true
    serviceAccount:
      ## @param worker.events.serviceAccount.create Create a service account for the event app
      ##
      create: true
      ## @param worker.events.serviceAccount.name The name of the ServiceAccount to use
      ## If not set and create is true, a name is generated using the substra.fullname template
      ##
      name: ""

## @section Substra periodic tasks worker settings
##
schedulerWorker:
  ## @param schedulerWorker.enabled Enable scheduler worker service
  ##
  enabled: true
  ## @param schedulerWorker.replicaCount Replica count for the periodic tasks worker
  ##
  replicaCount: 1
  ## @param schedulerWorker.image.registry Substra backend tasks scheduler image registry
  ## @param schedulerWorker.image.repository Substra backend tasks scheduler image repository
  ## @param schedulerWorker.image.tag Substra backend tasks scheduler image tag
  ## @param schedulerWorker.image.pullPolicy Substra backend task scheduler image pull policy
  ## @param schedulerWorker.image.pullSecrets Specify image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: substra/substra-backend
    tag: 0.30.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param schedulerWorker.nodeSelector Node labels for pod assignment
  ##
  nodeSelector: {}
  ## @param schedulerWorker.tolerations Toleration labels for pod assignment
  ##
  tolerations: []
  ## @param schedulerWorker.affinity Affinity settings for pod assignment
  ##
  affinity: {}
  ## @param schedulerWorker.resources Scheduler container resources requests and limits
  ##
  resources: {}
  ## @param schedulerWorker.podSecurityContext.enabled Enable security context
  ## @param schedulerWorker.podSecurityContext.runAsUser User ID for the pod
  ## @param schedulerWorker.podSecurityContext.runAsGroup Group ID for the pod
  ## @param schedulerWorker.podSecurityContext.fsGroup FileSystem group ID for the pod
  ##
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001


## @section Celery task scheduler settings
scheduler:
  ## @param scheduler.enabled Enable scheduler service
  ##
  enabled: true
  ## @param scheduler.replicaCount Replica count for the scheduler server
  ##
  replicaCount: 1
  ## @param scheduler.image.registry Subsra backend tasks scheduler image registry
  ## @param scheduler.image.repository Substra backend tasks scheduler image repository
  ## @param scheduler.image.tag Substra backend tasks scheduler image tag
  ## @param scheduler.image.pullPolicy Substra backend task scheduler image pull policy
  ## @param scheduler.image.pullSecrets Specify image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: substra/substra-backend
    tag: 0.30.0
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param scheduler.resources Scheduler container resources requests and limits
  ##
  resources: {}
  ## @param scheduler.nodeSelector Node labels for pod assignment
  ##
  nodeSelector: {}
  ## @param scheduler.tolerations Toleration labels for pod assignment
  ##
  tolerations: []
  ## @param scheduler.affinity Affinity settings for pod assignment
  ##
  affinity: {}
  ## @param scheduler.podSecurityContext.enabled Enable security context
  ## @param scheduler.podSecurityContext.runAsUser User ID for the pod
  ## @param scheduler.podSecurityContext.runAsGroup Group ID for the pod
  ## @param scheduler.podSecurityContext.fsGroup FileSystem group ID for the pod
  ##
  podSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001

## @section Substra container registry settings
##
containerRegistry:
  ## @param containerRegistry.local Whether the registry is exposed as a _nodePort_ and located in the same _Namespace_ as Substra.
  ##
  local: true
  ## @param containerRegistry.host Hostname of the container registry
  ##
  host: 127.0.0.1
  ## @param containerRegistry.port Port of the container registry
  ##
  port: 32000
  ## @param containerRegistry.scheme Communication scheme of the container registry
  ##
  scheme: http
  ## @param containerRegistry.pullDomain Hostname from which the cluster should pull container images
  ##
  pullDomain: 127.0.0.1
  ## @param containerRegistry.prepopulate Images to add to the container registry
  ## e.g:
  ## - image: owkin/substra-tools:0.7.0
  ##   sourceRegistry: ghcr.io
  ##   dstImage: test/substra-tools
  ##   dockerConfigSecretName: docker-config
  ##
  prepopulate: []

## @section Api event app settings
##
api:
  events:
    ## @param api.events.enabled Enable event service
    ##
    enabled: true
    ## @param api.events.image.registry Substra event app image registry
    ## @param api.events.image.repository Substra event app image repository
    ## @param api.events.image.tag Substra event app image tag
    ## @param api.events.image.pullPolicy Substra event app image pull policy
    ## @param api.events.image.pullSecrets Specify image pull secrets
    ##
    image:
      registry: ghcr.io
      repository: substra/substra-backend
      tag: 0.30.0
      pullPolicy: IfNotPresent
      pullSecrets: []
    ## @param api.events.podSecurityContext.enabled Enable security context
    ## @param api.events.podSecurityContext.runAsUser User ID for the pod
    ## @param api.events.podSecurityContext.runAsGroup Group ID for the pod
    ## @param api.events.podSecurityContext.fsGroup FileSystem group ID for the pod
    ##
    podSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001
    ## @param api.events.nodeSelector Node labels for pod assignment
    ##
    nodeSelector: {}
    ## @param api.events.tolerations Toleration labels for pod assignment
    ##
    tolerations: []
    ## @param api.events.affinity Affinity settings for pod assignment
    ##
    affinity: {}
    ## @param api.events.rbac.create Create a role and service account for the event app
    ##
    rbac:
      create: true
    serviceAccount:
      ## @param api.events.serviceAccount.create Create a service account for the event app
      ##
      create: true
      ## @param api.events.serviceAccount.name The name of the ServiceAccount to use
      ## If not set and create is true, a name is generated using the substra.fullname template
      ##
      name: ""

## @section Orchestrator settings
##
orchestrator:
  ## @param orchestrator.host The orchestrator gRPC endpoint
  ##
  host: orchestrator.local
  ## @param orchestrator.port The orchestrator gRPC port
  ##
  port: 9000
  tls:
    ## @param orchestrator.tls.enabled Enable TLS for the gRPC endpoint
    ##
    enabled: false
    ## @param orchestrator.tls.cacert A configmap containing the orchestrator CA certificate. Use this if your orchestrator uses a private CA.
    ##
    cacert:
    mtls:
      ## @param orchestrator.tls.mtls.enabled Enable client verification for the orchestrator gRPC endpoint
      ##
      enabled: false
      ## @param orchestrator.tls.mtls.clientCertificate A secret containing the client certificate `tls.crt` and private key `tls.key`
      ##
      clientCertificate:
  ## @param orchestrator.mspID current organization name on the Orchestrator
  ##
  mspID: OwkinPeerMSP

  channels:
    ## @param orchestrator.channels[0].mychannel.restricted Make this channel restricted to a single organization. The server will fail if there is more than one instance in this channel
    ## @param orchestrator.channels[0].mychannel.model_export_enabled Allow logged-in users to download models trained on this organization
    ## @param orchestrator.channels[0].mychannel.chaincode.name The name of the chaincode instantiated on this channel
    ##
    - mychannel:
        restricted: false
        model_export_enabled: false
        chaincode:
          name: mycc

## @section Kaniko settings
##
kaniko:
  ## @param kaniko.image.registry Kaniko image registry
  ## @param kaniko.image.repository Kaniko image repository
  ## @param kaniko.image.tag Kaniko image tag
  ##
  image:
    registry: gcr.io
    repository: kaniko-project/executor
    tag: v1.8.1
  ## @param kaniko.mirror If set to `true` pull base images from the local registry.
  ##
  mirror: false
  ## @param kaniko.dockerConfigSecretName A Docker config to use for pulling base images
  ##
  dockerConfigSecretName:
  cache:
    warmer:
      ## @param kaniko.cache.warmer.image.registry Kaniko cache warmer registry
      ## @param kaniko.cache.warmer.image.repository Kaniko cache warmer repository
      ## @param kaniko.cache.warmer.image.tag Kaniko cache warmer image tag
      ##
      image:
        registry: gcr.io
        repository: kaniko-project/warmer
        tag: v1.8.1
      ## @param kaniko.cache.warmer.cachedImages A list of docker images to warmup the Kaniko cache
      ## e.g:
      ## - ghcr.io/substra-314908/substra-tools:0.9.0-minimal
      ##
      cachedImages: []
    ## @param kaniko.cache.persistence.storageClass Specify the _StorageClass_ used to provision the volume. Or the default _StorageClass_ will be used. Set it to `-` to disable dynamic provisioning
    ## @param kaniko.cache.persistence.size The size of the volume.
    ##
    persistence:
      storageClass: ""
      size: 10Gi

## @section Account operator settings
##
addAccountOperator:
  ## @param addAccountOperator.outgoingOrganizations Outgoind organizations credentials for substra backend organization-to-organization communications
  ## e.g:
  ## - name: organizationId
  ##   secret: organizationSecret
  ##
  outgoingOrganizations: []
  ## @param addAccountOperator.incomingOrganizations Incoming organizations credentials for substra backend organization-to-organization communications
  ## e.g:
  ## - name: organizationId
  ##   secret: organizationSecret
  ##
  incomingOrganizations: []
  ## @param addAccountOperator.users A list of administrators users who can log into the substra backend server with admin privileges
  ## e.g:
  ## - name: username
  ##   secret: password
  ##   channel: mychannel
  ##
  users: []

## @skip postgresql
##
postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: postgres
    username: postgres
    password: postgres
    database: substra

## @skip redis
##
redis:
  enabled: true
  architecture: standalone
  auth:
    password: redis
  master:
    persistence:
      enabled: false
    service:
      ports:
        redis: 6379
  replica:
    replicaCount: 0

## @skip docker-registry
##
docker-registry:
  enabled: true
  storage: filesystem
  persistence:
    enabled: true
    size: 10Gi
    deleteEnabled: true
  service:
    type: NodePort

## @skip minio
##
minio:
  enabled: true
  auth:
    rootUser: minio
    rootPassword: minio1234
    ## required for helm upgrade to work well (https://github.com/bitnami/charts/blob/1d7e62b47f525fca5ecdc2f34a4e9fa69f1532f5/bitnami/minio/values.yaml#L106)
    forcePassword: true
    ## required to take into account new access and secret keys
    forceNewKeys: true

## @section Helm hooks
##
hooks:
  ## @param hooks.serviceAccount Service account to use for the helm hooks
  ##
  serviceAccount: ""
  ## @param hooks.deleteWorkerPvc.enabled Enable the deletion of deployed compute pods after the application deletion
  ## @param hooks.deleteWorkerPvc.image.repository Image repository for the hook image
  ## @param hooks.deleteWorkerPvc.image.tag Image tag for the hook image
  ##
  deleteWorkerPvc:
    enabled: False
    image:
      repository: bitnami/kubectl
      tag: latest
  ## @param hooks.deleteComputePods.enabled Enable the deletion of the worker PVCs after the application deletion
  ## @param hooks.deleteComputePods.image.repository Image repository for the hook image
  ## @param hooks.deleteComputePods.image.tag Image tag for the hook image
  ##
  deleteComputePods:
    enabled: False
    image:
      repository: bitnami/kubectl
      tag: latest
