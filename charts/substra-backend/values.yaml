gpu:
  enabled: false
  platform: ubuntu # or cos

docker:
  # Path of the docker socket on the host
  socket: /var/run/docker.sock
  # Dockerconfig to be used to pull the images (base64'd)
  config: null
  # Images to pull
  pullImages: []
    # - substrafoundation/substra-tools:0.0.1

backend:
  replicaCount: 1
  settings: prod
  siteHost: localhost
  defaultDomain: localhost

  image:
    repository: substrafoundation/substra-backend
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  service:
    type: NodePort
    port: 8000
    annotations: {}
    labels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    # nodePort: 30000

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

outgoingNodes: []
  # - name: nodeId
  #   secret: nodeSecret
incomingNodes: []
  # - name: nodeId
  #   secret: nodeSecret

users: []
  # - name: username
  #   secret: password

persistence:
  hostPath: "/substra"
  size: "10Gi"

# Secrets names
secrets:
  caCert: hlf-cacert
  user:
    # Certificate, saved under key 'cert.pem'
    cert: hlf-idcert
    # Key, saved under 'key.pem'
    key: hlf-idkey
  peer:
    tls: # TLS secret, saved under keys 'tls.crt' and 'tls.key' (to conform with K8S nomenclature)
      client: hlf-client-tls
      server: hlf-tls

organization:
  name: substra

user:
  name: user

peer:
  host: healthchain-peer.owkin.com
  port: 443
  mspID: OwkinPeerMSP

channel: mychannel

chaincode:
  name: mycc
  version: "1.0"

postgresql:
  enabled: true
  postgresqlDatabase: substra
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  persistence:
    enabled: false

rabbitmq:
  enabled: true
  rabbitmq:
    username: rabbitmq
    password: rabbitmq
  host: rabbitmq
  port: 5672
  persistence:
    enabled: false

flower:
  enabled: true
  host: flower
  port: 5555
  persistence:
    enabled: false

  image:
    repository: substrafoundation/flower
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  service:
    type: NodePort
    port: 5555
    annotations: {}
    labels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []

celerybeat:
  replicaCount: 1
  image:
    repository: substrafoundation/celerybeat
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

celeryworker:
  replicaCount: 1
  image:
    repository: substrafoundation/celeryworker
    tag: latest
    pullPolicy: IfNotPresent
    pullSecrets: []

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

extraEnv: []
  # - name: ENV_VARIABLE
  #   value: false
