apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "substra.fullname" . }}-migrations
  labels:
    {{ include "substra.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "substra.fullname" . }}-migrations
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "substra.fullname" . }}-migrations
      labels:
          {{ include "substra.labels" . | nindent 10 }}
          role-database-client: 'true'
          # If OIDC is enabled, we need to allow the job to access the internet to fetch the user info, as it is based on the user info.
          {{- if .Values.oidc.enabled }}
          role-internet-egress: 'true'
          {{- end }}
    spec:
      restartPolicy: OnFailure
      automountServiceAccountToken: false
      {{- if .Values.server.podSecurityContext.enabled }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: {{ .Values.server.podSecurityContext.fsGroup }}
        runAsUser: {{ .Values.server.podSecurityContext.runAsUser }}
        runAsGroup: {{ .Values.server.podSecurityContext.runAsGroup }}
      {{- end}}
      {{- with .Values.server.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: db-migrations
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop: ["ALL"]
        image: {{ include "substra-backend.images.name" (dict "img" .Values.server.image "defaultTag" $.Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -euo pipefail
            ./manage.py migrate

            ## Users
            ./manage.py sync_users /accounts/users

            ## IncomingOrganization
            ./manage.py sync_incoming_organizations /accounts/incoming_organizations

            ## OutgoingOrganization
            ./manage.py sync_outgoing_organizations  /accounts/outgoing_organizations
        envFrom:
          - configMapRef:
              name: {{ include "substra.fullname" . }}-orchestrator
          - configMapRef:
              name: {{ include "substra.fullname" . }}-database
          - configMapRef:
              name: {{ include "substra.fullname" . }}-oidc
          - secretRef:
              name: {{ include "substra-backend.database.secret-name" . }}
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: backend.settings.{{ .Values.settings }}
        volumeMounts:
          - mountPath: /accounts
            name: accounts
            readOnly: True
      volumes:
        - name: accounts
          secret:
            secretName: {{ include "substra-backend.accountOperator.secretName" . }}
