apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "substra.fullname" . }}-server
data:
  conf.json: |
    {
      "name": "{{ .Values.organization.name }}",
      "core_peer_mspconfigpath": "/var/hyperledger/msp",
      "channels": {{ .Values.channels | toJson }},
      "chaincode_name": "{{ .Values.chaincode.name }}",
      "chaincode_version": "{{ .Values.chaincode.version }}",
      "client": {
        "name": "{{ .Values.user.name }}",
        "org": "{{ .Values.organization.name }}",
        "state_store": "/tmp/hfc-cvs",
        "key_path": "/var/hyperledger/msp/keystore/*",
        "cert_path": "/var/hyperledger/msp/signcerts/cert.pem",
        "msp_id": "{{ .Values.peer.mspID }}"
      },
      "peer": {
        "name": "peer",
        "host": "{{ .Values.peer.host }}",
        "port": {
          "internal": {{ .Values.peer.port }},
          "external": {{ .Values.peer.port }}
        },
        "docker_core_dir": "/var/hyperledger/fabric_cfg",
        "tlsCACerts": "/var/hyperledger/ca/cacert.pem",
        "clientKey": "/var/hyperledger/tls/client/pair/tls.key",
        "clientCert": "/var/hyperledger/tls/client/pair/tls.crt",
        "grpcOptions": {
          "grpc.ssl_target_name_override": "{{ .Values.peer.host }}",
          "grpc.max_send_message_length": -1,
          "grpc.max_receive_message_length": -1
        }
      }
    }
