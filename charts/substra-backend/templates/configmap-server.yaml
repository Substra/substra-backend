apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "substra.fullname" . }}-server
data:
  conf.json: |
    {
      "name": "{{ .Values.organization.name }}",
      "core_peer_mspconfigpath": "/var/hyperledger/msp",
      "channels": {{ .Values.channels | toJson }},
      "chaincode_name": "{{ .Values.chaincode.name }}",
      "chaincode_version": "{{ .Values.chaincode.version }}",
      "client": {
        "name": "{{ .Values.user.name }}",
        "org": "{{ .Values.organization.name }}",
        "state_store": "/tmp/hfc-cvs",
        "key_path": "/var/hyperledger/msp/keystore/*",
        "cert_path": "/var/hyperledger/msp/signcerts/cert.pem",
        "msp_id": "{{ .Values.peer.mspID }}"
      },
      "peer": {
        "name": "peer",
        "host": "{{ .Values.peer.host }}",
        "port": {
          "internal": {{ .Values.peer.port }},
          "external": {{ .Values.peer.port }}
        },
        "docker_core_dir": "/var/hyperledger/fabric_cfg",
        "tlsCACerts": "/var/hyperledger/ca/cacert.pem",
        "clientKey": "/var/hyperledger/tls/client/pair/tls.key",
        "clientCert": "/var/hyperledger/tls/client/pair/tls.crt"
      },
      "grpcOptions": {
        "grpc.max_send_message_length": -1,
        "grpc.max_receive_message_length": -1,
        "grpc.keepalive_time_ms": {{ .Values.backend.grpc.keepalive.timeMs }},
        "grpc.http2.min_time_between_pings_ms": {{ .Values.backend.grpc.keepalive.timeMs }},
        "grpc.keepalive_timeout_ms": 20000,
        "grpc.http2.max_pings_without_data": 0,
        "grpc.keepalive_permit_without_calls": 1
      }
    }
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "substra.fullname" . }}-server-uwsgi
data:
  uwsgi.ini: |
    [uwsgi]
    module                        = backend.wsgi
    log-master                    = true
    env                           = DJANGO_SETTINGS_MODULE=backend.settings.server.{{ .Values.backend.settings }}
    static-map                    = /static=/usr/src/app/backend/statics

    master                        = 1
    processes                     = {{ .Values.backend.uwsgiProcesses }}
    threads                       = {{ .Values.backend.uwsgiThreads }}

    http-socket                   = :{{ .Values.backend.service.port }}

    need-app                      = true
    socket-timeout                = 300
    http-timeout                  = 300
    http-keepalive                = 300
    harakiri                      = 300
    harakiri-verbose              = true
    die-on-term                   = 1
    vacuum                        = true
    buffer-size                   = 65535

    add-header                    = Connection: Keep-Alive
    ignore-sigpipe                = true
    ignore-write-errors           = true
    disable-write-exception       = true
