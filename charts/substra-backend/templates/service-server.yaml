apiVersion: v1
kind: Service
metadata:
  name: {{ template "substra.fullname" . }}-server
  labels:
    {{ include "substra.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ template "substra.name" . }}-server
  {{- if .Values.server.service.annotations }}
  annotations:
    {{- toYaml .Values.server.service.annotations | nindent 4 }}
  {{- end }}
spec:
{{- if (or (eq .Values.server.service.type "ClusterIP") (empty .Values.server.service.type)) }}
  type: ClusterIP
  {{- if .Values.server.service.clusterIP }}
  clusterIP: {{ .Values.server.service.clusterIP }}
  {{end}}
{{- else if eq .Values.server.service.type "LoadBalancer" }}
  type: {{ .Values.server.service.type }}
  {{- if .Values.server.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.server.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.server.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.server.service.loadBalancerSourceRanges | indent 4 }}
  {{- end -}}
{{- else }}
  type: {{ .Values.server.service.type }}
{{- end }}
{{- if .Values.server.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.server.service.externalIPs | indent 4 }}
{{- end }}
  ports:
    - name: http
      port: {{ .Values.server.service.port }}
      protocol: TCP
      targetPort: http
    {{- if .Values.server.metrics.enabled }}
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: metrics
    {{- end }}
{{ if (and (eq .Values.server.service.type "NodePort") (not (empty .Values.server.service.nodePort))) }}
      nodePort: {{ .Values.server.service.nodePort }}
{{ end }}
  selector:
    app.kubernetes.io/name: {{ template "substra.name" . }}-server
    app.kubernetes.io/instance: {{ .Release.Name }}
