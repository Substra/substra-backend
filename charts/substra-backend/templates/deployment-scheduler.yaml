apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "substra.fullname" . }}-scheduler
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" . }}-scheduler
    app.kubernetes.io/part-of: {{ template "substra.name" . }}
spec:
  replicas: {{ .Values.celeryworker.replicaCount }}
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ template "substra.name" . }}-scheduler
        app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "substra.name" . }}-scheduler
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with $.Values.backend.image.pullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: scheduler
          image: "{{ .Values.celeryworker.image.repository }}:{{ .Values.celeryworker.image.tag }}"
          {{- if .Values.celeryworker.image.pullPolicy }}
          imagePullPolicy: "{{ .Values.celeryworker.image.pullPolicy }}"
          {{- end }}
          command: ["celery"]
          args: ["-A", "backend", "worker", "-l", "info", "-n", "{{ .Values.organization.name }}", "-Q", "{{ .Values.organization.name }},scheduler,celery", "--hostname", "{{ .Values.organization.name }}.scheduler"]
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: backend.settings.celery.{{ .Values.backend.settings }}
            - name: BACKEND_ORG
              value: {{ .Values.organization.name }}
            - name: CELERY_BROKER_URL
              value: "amqp://{{ .Values.rabbitmq.rabbitmq.username }}:{{ .Values.rabbitmq.rabbitmq.password }}@{{ .Release.Name }}-{{ .Values.rabbitmq.host }}:{{ .Values.rabbitmq.port }}//"
            - name: LEDGER_CONFIG_FILE
              value: /conf/{{ .Values.organization.name }}/substra-backend/conf.json
            - name: PYTHONUNBUFFERED
              value: "1"
          volumeMounts:
            - name: config
              mountPath: /conf/{{ .Values.organization.name }}/substra-backend
              readOnly: true
            - name: user-cert
              mountPath: /var/hyperledger/msp/signcerts
            - name: user-key
              mountPath: /var/hyperledger/msp/keystore
            - name: peer-tls-server
              mountPath: /var/hyperledger/tls/server/pair
            - name: peer-tls-client
              mountPath: /var/hyperledger/tls/client/pair
            - name: cacert
              mountPath: /var/hyperledger/ca
          resources:
            {{- toYaml .Values.celeryworker.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "substra.fullname" . }}-server
      - name: user-cert
        secret:
          secretName: {{ $.Values.secrets.user.cert }}
      - name: user-key
        secret:
          secretName: {{ $.Values.secrets.user.key }}
      - name: peer-tls-server
        secret:
          secretName: {{ $.Values.secrets.peer.tls.server }}
      - name: peer-tls-client
        secret:
          secretName: {{ $.Values.secrets.peer.tls.client }}
      - name: cacert
        secret:
          secretName: {{ $.Values.secrets.caCert }}
    {{- with .Values.celeryworker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.celeryworker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.celeryworker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
