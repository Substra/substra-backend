apiVersion: skaffold/v1beta13
kind: Config
build:
  artifacts:
    - image: substrafoundation/substra-backend
      context: .
      docker:
        dockerfile: docker/substra-backend/Dockerfile
      sync:
        manual:
        - src: backend/manage.py
          dest: /usr/src/app/
          strip: backend/
        - src: backend/libs/**/*
          dest: /usr/src/app/libs
          strip: backend/libs/
        - src: backend/substrapp/**/*
          dest: /usr/src/app/substrapp
          strip: backend/substrapp/
        - src: backend/events/**/*
          dest: /usr/src/app/events
          strip: backend/events/
        - src: backend/backend/**/*
          dest: /usr/src/app/backend
          strip: backend/backend/
        - src: backend/node/**/*
          dest: /usr/src/app/node
          strip: backend/node/
        - src: backend/node-register/**/*
          dest: /usr/src/app/node-register
          strip: backend/node-register/
        - src: backend/users/**/*
          dest: /usr/src/app/users
          strip: backend/users/

    - image: substrafoundation/celerybeat
      context: .
      docker:
        dockerfile: docker/celerybeat/Dockerfile
      sync:
        manual:
        - src: backend/libs/**/*
          dest: /usr/src/app/libs
          strip: backend/libs/
        - src: backend/substrapp/**/*
          dest: /usr/src/app/substrapp
          strip: backend/substrapp/
        - src: backend/backend/**/*
          dest: /usr/src/app/backend
          strip: backend/backend/
        - src: backend/node/**/*
          dest: /usr/src/app/node
          strip: backend/node/
        - src: backend/users/**/*
          dest: /usr/src/app/users
          strip: backend/users/

    - image: substrafoundation/celeryworker
      context: .
      docker:
        dockerfile: docker/celeryworker/Dockerfile
      sync:
        manual:
        - src: backend/libs/**/*
          dest: /usr/src/app/libs
          strip: backend/libs/
        - src: backend/substrapp/**/*
          dest: /usr/src/app/substrapp
          strip: backend/substrapp/
        - src: backend/backend/**/*
          dest: /usr/src/app/backend
          strip: backend/backend/
        - src: backend/node/**/*
          dest: /usr/src/app/node
          strip: backend/node/
        - src: backend/users/**/*
          dest: /usr/src/app/users
          strip: backend/users/

    - image: substrafoundation/flower
      context: .
      docker:
        dockerfile: docker/flower/Dockerfile
      sync:
        manual:
        - src: backend/libs/**/*
          dest: /usr/src/app/libs
          strip: backend/libs/
        - src: backend/substrapp/**/*
          dest: /usr/src/app/substrapp
          strip: backend/substrapp/
        - src: backend/backend/**/*
          dest: /usr/src/app/backend
          strip: backend/backend/
        - src: backend/node/**/*
          dest: /usr/src/app/node
          strip: backend/node/
        - src: backend/users/**/*
          dest: /usr/src/app/users
          strip: backend/users/

deploy:
  statusCheckDeadlineSeconds: 300
  helm:
    releases:
      - name: backend-org-1
        chartPath: charts/substra-backend
        namespace: org-1
        imageStrategy:
          helm: {}
        values:
          backend.image: substrafoundation/substra-backend
          celerybeat.image: substrafoundation/celerybeat
          celeryworker.image: substrafoundation/celeryworker
          flower.image: substrafoundation/flower
        overrides:
          rabbitmq:
            rabbitmq:
              erlangCookie: rabbitmqErlangCookie
          docker-registry:
            service:
              type: NodePort
              nodePort: 32001
          registry:
            local: true
            scheme: http
            pullDomain: 127.0.0.1:32001
          secrets:
            fabricConfigmap: network-org-1-hlf-k8s-fabric
          celeryworker:
            concurrency: 3
            rbac:
              enable: true
          backend:
            settings: dev
            tokenStrategy: 'reuse'
            defaultDomain: http://backend-org-1-substra-backend-server.org-1:8000
            ingress:
              enabled: true
              hosts:
                - { host: substra-backend.node-1.com, paths: ["/"] }
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
                nginx.ingress.kubernetes.io/proxy-body-size: 100m
                nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
                nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
                nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout http_502'
                nginx.ingress.kubernetes.io/proxy-next-upstream-tries: '3'
          organization:
            name: MyOrg1
          peer:
            host: network-org-1-peer-1-hlf-peer.org-1
            port: 7051
            mspID: MyOrg1MSP
          incomingNodes:
            - { name: MyOrg1MSP, secret: selfSecret1 }
            - { name: MyOrg2MSP, secret: nodeSecret1w2 }
          outgoingNodes:
            - { name: MyOrg1MSP, secret: selfSecret1 }
            - { name: MyOrg2MSP, secret: nodeSecret2w1 }
          users:
            - name: "node-1"
              secret: "p@$swr0d44"
              channel: "mychannel"
            - name: "node-1-yourchannel"
              secret: "p@$swr0d44"
              channel: "yourchannel"
          persistence:
            hostPathServerMedias: "/tmp/org-1/"
          extraEnv:
            # Should be a json list
            - name: CORS_ORIGIN_WHITELIST
              value: '["http://substra-frontend.node-1.com/"]'
            - name: CORS_ALLOW_CREDENTIALS
              value: "true"
            - name: DEFAULT_THROTTLE_RATES
              value: '120'
            - name: TASK_CACHE_DOCKER_IMAGES
              value: 'False'
            - name: BUILD_IMAGE
              value: 'True'
            - name: 'LEDGER_WAIT_FOR_EVENT_TIMEOUT'
              value: '120'
          channels:
            - mychannel
            - yourchannel

      - name: backend-org-2
        chartPath: charts/substra-backend
        namespace: org-2
        imageStrategy:
          helm: {}
        values:
          backend.image: substrafoundation/substra-backend
          celerybeat.image: substrafoundation/celerybeat
          celeryworker.image: substrafoundation/celeryworker
          flower.image: substrafoundation/flower
        overrides:
          rabbitmq:
            rabbitmq:
              erlangCookie: rabbitmqErlangCookie
          docker-registry:
            service:
              type: NodePort
              nodePort: 32002
          registry:
            local: true
            scheme: http
            pullDomain: 127.0.0.1:32002
          secrets:
            fabricConfigmap: network-org-2-hlf-k8s-fabric
          celeryworker:
            concurrency: 3
            rbac:
              enable: true
          backend:
            settings: dev
            tokenStrategy: 'reuse'
            defaultDomain: http://backend-org-2-substra-backend-server.org-2:8000
            ingress:
              enabled: true
              hosts:
                - { host: substra-backend.node-2.com, paths: ["/"] }
              annotations:
                kubernetes.io/ingress.class: nginx
                nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
                nginx.ingress.kubernetes.io/proxy-body-size: 100m
                nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
                nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
                nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout http_502'
                nginx.ingress.kubernetes.io/proxy-next-upstream-tries: '3'
          organization:
            name: MyOrg2
          peer:
            host: network-org-2-peer-1-hlf-peer.org-2
            port: 7051
            mspID: MyOrg2MSP
          incomingNodes:
            - { name: MyOrg1MSP, secret: nodeSecret2w1 }
            - { name: MyOrg2MSP, secret: selfSecret2 }
          outgoingNodes:
            - { name: MyOrg1MSP, secret: nodeSecret1w2 }
            - { name: MyOrg2MSP, secret: selfSecret2 }
          users:
            - name: "node-2"
              secret: "p@$swr0d45"
              channel: "mychannel"
            - name: "node-2-yourchannel"
              secret: "p@$swr0d45"
              channel: "yourchannel"
          persistence:
            hostPathServerMedias: "/tmp/org-2/"
          extraEnv:
            # Should be a json list
            - name: CORS_ORIGIN_WHITELIST
              value: '["http://substra-frontend.node-2.com/"]'
            - name: CORS_ALLOW_CREDENTIALS
              value: "true"
            - name: DEFAULT_THROTTLE_RATES
              value: '120'
            - name: TASK_CACHE_DOCKER_IMAGES
              value: 'False'
            - name: BUILD_IMAGE
              value: 'True'
            - name: 'LEDGER_WAIT_FOR_EVENT_TIMEOUT'
              value: '120'
          channels:
            - mychannel
            - yourchannel

profiles:
  - name: prod
    patches:
      - op: replace
        path: /deploy/helm/releases/0/overrides/backend/settings
        value: prod
      - op: replace
        path: /deploy/helm/releases/1/overrides/backend/settings
        value: prod
