rabbitmq:
  auth:
    erlangCookie: rabbitmqErlangCookie

docker-registry:
  service:
    type: NodePort

registry:
  local: true
  scheme: http
  pullDomain: 127.0.0.1
  prepopulate:
    - image: gcr.io/connect-314908/connect-tools:0.9.0-minimal
      dockerConfigSecretName: "docker-config"

celeryworker:
  concurrency: 3
  rbac:
    enable: true

backend:
  settings: dev
  tokenStrategy: 'reuse'
  defaultDomain: http://backend-org-2-substra-backend-server.org-2:8000
  commonHostDomain: node-2.com
  kaniko:
    dockerConfigSecretName: "docker-config"
    cache:
      warmer:
        images:
          - image: gcr.io/connect-314908/connect-tools:0.9.0-minimal
  ingress:
    enabled: true
    hostname: "substra-backend.node-2.com"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
      nginx.ingress.kubernetes.io/proxy-body-size: 100m
      nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
      nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
      nginx.ingress.kubernetes.io/proxy-next-upstream: 'error timeout http_502'
      nginx.ingress.kubernetes.io/proxy-next-upstream-tries: '3'

organization:
  name: MyOrg2

peer:
  mspID: MyOrg2MSP

incomingNodes:
  - { name: MyOrg1MSP, secret: nodeSecret2w1 }
  - { name: MyOrg2MSP, secret: selfSecret2 }

outgoingNodes:
  - { name: MyOrg1MSP, secret: nodeSecret1w2 }
  - { name: MyOrg2MSP, secret: selfSecret2 }

users:
  - name: "node-2"
    secret: "p@$swr0d45"
    channel: "mychannel"
  - name: "node-2-yourchannel"
    secret: "p@$swr0d45"
    channel: "yourchannel"

persistence:
  hostPathServerMedias: "/tmp/org-2/"

extraEnv:
  # Should be a json list
  - name: CORS_ORIGIN_WHITELIST
    value: '["http://substra-frontend.node-2.com", "http://substra-frontend.node-2.com:3000", "http://substra-frontend.node-2.com:3001"]'
  - name: CORS_ALLOW_CREDENTIALS
    value: "true"
  - name: ALLOWED_HOSTS
    value: '[".node-2.com", ".org-2", ".org-2.svc.cluster.local"]'
  - name: DEFAULT_THROTTLE_RATES
    value: '120'
  - name: TASK_CACHE_DOCKER_IMAGES
    value: 'False'

channels:
  - mychannel:
      restricted: false
      model_export_enabled: true
      chaincode:
        name: mycc
        version: "1.0"
  - yourchannel:
      restricted: false
      model_export_enabled: true
      chaincode:
        name: yourcc
        version: "1.0"

hooks:
  serviceAccount:
    name: substra-backend-delete-hook
  deleteComputePods:
    enabled: True

privateCa:
  enabled: true
  configMap:
    name: orchestrator-tls-cacert
    fileName: ca.crt

orchestrator:
  host: owkin-orchestrator-org-1-server.org-1.svc.cluster.local
  port: 9000
  tls:
    enabled: true
    secrets:
      cacert: orchestrator-tls-cacert
    mtls:
      enabled: true
      secrets:
        pair: orchestrator-tls-client-pair
  rabbitmq:
    host: owkin-orchestrator-org-1-rabbitmq.org-1.svc.cluster.local
    auth:
      username: MyOrg2MSP
      password: password2
    tls:
      enabled: true
      secrets:
        pair: orchestrator-tls-client-pair
